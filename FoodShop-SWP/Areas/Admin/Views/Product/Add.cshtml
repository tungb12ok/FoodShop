@model FoodShop_SWP.Models.EF.Product
@{
    ViewData["Title"] = "Add New Product";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="~/admin/home" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/product" class="nav-link">Product</a>
        </li>
    </ul>
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Add New Product</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/home">Home</a></li>
                    <li class="breadcrumb-item"><a href="/admin/Product">Product</a></li>
                    <li class="breadcrumb-item active">Add</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Add Product</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">
                    @using (Html.BeginForm("Add", "Product", FormMethod.Post, new { }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="card">
                            <div class="card-header p-2">
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">Product Info</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#timeline" data-toggle="tab">Image</a></li>
                                </ul>
                            </div><!-- /.card-header -->
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="activity">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Name Product</label>
                                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Name Product" })
                                            @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label asp-for="Image">Image</label>
                                            <div class="input-group">
                                                <div class="custom-file">
                                                    @Html.TextBoxFor(x => x.Image, new { @class = "form-control", @id = "imageURL" })
                                                </div>
                                                <div class="input-group-append">
                                                    <input asp-for="Image" type="button" value="upload" onclick="openElFinder(this);" data-editor="your_editor_value" />
                                                </div>
                                            </div>
                                        </div>
                                        @* <div class="form-group">
                                            <label for="exampleInputEmail1">Alias</label>
                                            @Html.TextBoxFor(x => x.Alias, new { @class = "form-control", @placeholder = "Alias" })
                                            @Html.ValidationMessageFor(x => x.Alias, null, new { @class = "text-danger" })
                                        </div> *@
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">SKU</label>
                                            @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control", @placeholder = "Code Product" })
                                            @Html.ValidationMessageFor(x => x.ProductCode, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Category</label>
                                            <select asp-for="ProductCategoryId" class="form-control" asp-items="ViewBag.ProductCategory"></select>
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Description</label>
                                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control"})
                                            @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label asp-for="Detail">Detail</label>
                                            <textarea id="summernoteEditor" asp-for="Detail" class="form-control"></textarea>
                                        </div>
                                        <div class="row">
                                            
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label asp-for="Quantity">Quantity</label>
                                                    <input asp-for="Quantity" value="1" class="form-control auto" />
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label asp-for="Price">Price</label>
                                                    <input asp-for="Price" value="1" class="form-control auto" placeholder="$" />
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                
                                                <div class="form-group">
                                                    <label asp-for="PriceSale">Price Sale</label>
                                                    <input asp-for="PriceSale" value="0" class="form-control auto" placeholder="$" />
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <label asp-for="OriginalPrice">Cost</label>
                                                    <input asp-for="OriginalPrice" value="0" class="form-control auto" placeholder="$" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-3">
                                                <div class="form-group">

                                                    <div class="custom-control custom-checkbox">
                                                        @Html.CheckBoxFor(x => x.IsActive, new { @class = "custom-control-input", @id = "customCheckbox2", @checked = "checked" })
                                                        <label for="customCheckbox2" class="custom-control-label">IsActive</label>
                                                    </div>


                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-checkbox">
                                                        @Html.CheckBoxFor(x => x.IsFeature, new { @class = "custom-control-input", @id = "IsFeatureCheckbox" })
                                                        <label for="IsFeatureCheckbox" class="custom-control-label">IsFeature</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-checkbox">
                                                        @Html.CheckBoxFor(x => x.IsSale, new { @class = "custom-control-input", @id = "IsSaleCheckbox" })
                                                        <label for="IsSaleCheckbox" class="custom-control-label">IsSale</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- /.tab-pane -->
                                    @*< div class="tab-pane" id="timeline">
                                        <div class="row">
                                            <div class="col-md-12 text-right">
                                                <input type="button" class="btn btn-primary" id="iTaiAnh" onclick="BrowseServer();" value="Tải ảnh" />
                                            </div>
                                            <div class="col-md-12">
                                                <table class="table table-hover" id="tbAnhSanPham">
                                                    <thead>
                                                        <tr>
                                                            <th class="text-center">No.</th>
                                                            <th class="text-center">Image</th>
                                                            <th class="text-center">Main Image</th>
                                                            <th class="text-center">Thao tác</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="tbHtml">
                                                    </tbody>
                                                </table>
                                                <input type="hidden" id="tCurrentId" value="0" />
                                            </div>
                                        </div>
                                    </div> *@
                                    <!-- /.tab-pane -->

                                    @* <div class="tab-pane" id="settings">
                                        <form class="form-horizontal">
                                            <div class="form-group row">
                                                <label for="inputName" class="col-sm-2 col-form-label">SEO Title</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoTitle, new { @class = "form-control", @placeholder = "SeoTitle" })
                                                    @Html.ValidationMessageFor(x => x.SeoTitle, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="inputEmail" class="col-sm-2 col-form-label">SeoKeywords</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoKeywords, new { @class = "form-control", @placeholder = "SeoKeywords" })
                                                    @Html.ValidationMessageFor(x => x.SeoKeywords, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="inputName2" class="col-sm-2 col-form-label">SeoDescription</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoDescription, new { @class = "form-control", @placeholder = "SeoDescription" })
                                                    @Html.ValidationMessageFor(x => x.SeoDescription, null, new { @class = "text-danger" })
                                                </div>
                                            </div>

                                        </form>
                                    </div> *@
                                    <!-- /.tab-pane -->
                                </div>
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->
                            <div class="form-group">
                                <a href="/admin/product" class="btn btn-danger">Back</a>
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </div> <!-- /.card -->
                    }
                </div>
                @if (ViewBag.ValidationErrors != null)
                {
                    <div class="alert alert-danger">
                        <ul>
                            @foreach (var error in ViewBag.ValidationErrors)
                            {
                                <li>@error</li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">
        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
@section  scripts{
    <script>
        $(document).ready(function () {
            $('#summernoteEditor').summernote({
                tabsize: 2,
                height: 120,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'underline', 'clear']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['height', ['height']],
                    ['insert', ['link', 'picture', 'video', 'elfinder']],
                    ['view', ['fullscreen', 'codeview', 'help']]
                ]
            });
            $('#uploadButton').click(function () {
                elFinderDialog(editor);
            });
        });
        (function (factory) {
            if (typeof define === 'function' && define.amd) {
                define(['jquery'], factory);
            }
            else if (typeof module === 'object' && module.exports) {
                module.exports = factory(require('jquery'));
            } else {
                factory(window.jQuery);
            }
        }(function ($) {
            $.extend($.summernote.plugins, {
                // Tạo plugin tên elfinder
                'elfinder': function (context) {
                    var self = this;
                    // ui has renders to build ui elements.
                    var ui = $.summernote.ui;
                    // Tạo nút bấm
                    context.memo('button.elfinder', function () {
                        var button = ui.button({
                            contents: '<i class="note-icon-picture"/> Files',
                            tooltip: 'Quản lý file',
                            click: function () {
                                // Bấm vào nút bấm gọi hàm elfinderDialog
                                elfinderDialog(context);
                            }
                        });
                        // create jQuery object from button instance.
                        var $elfinder = button.render();
                        return $elfinder;
                    });
                    // This methods will be called when editor is destroyed by $('..').summernote('destroy');
                    // You should remove elements on `initialize`.
                    this.destroy = function () {
                        this.$panel.remove();
                        this.$panel = null;
                    };
                }

            });
        }));
        function openElFinder(button) {
            // Lấy giá trị editor từ thuộc tính data
            elfinderDialogPicture();
        }
        function elfinderDialogPicture() {
            var fm = $('<div class="ui-front-finder"/>').dialogelfinder({
                baseUrl: "@Url.Content("~/lib/elfinder/")",
                url: "@Url.Action("Connector", "FileManager", new { area = "Files" })",
                lang: 'vi',
                width: 840,
                height: 450,
                destroyOnClose: true,
                getFileCallback: function (files, fm) {
                    console.log(files);
                    // Chuyển đổi đường dẫn tuyệt đối thành đường dẫn tương đối
                    var relativePath = getRelativePath(files.url);

                    // Cập nhật giá trị của textbox với đường dẫn tương đối
                    $('#imageURL').val(relativePath);
                },
                commandsOptions: {
                    getfile: {
                        oncomplete: 'close',
                        folders: false
                    }
                }
            }).dialogelfinder('instance');
        }
        function getRelativePath(absolutePath) {
            // Lấy phần path sau domain
            var relativePath = absolutePath.replace(/^.*\/\/[^\/]+/, '');

            return relativePath;
        }

        function elfinderDialog(editor) {
            var fm = $('<div class="ui-front-finder"/>').dialogelfinder({
                baseUrl: "@Url.Content("~/lib/elfinder/")",
                url: "@Url.Action("Connector", "FileManager", new { area = "Files" })",
                lang: 'vi',
                width: 840,
                height: 450,
                destroyOnClose: true,
                getFileCallback: function (files, fm) {
                    console.log(files);
                    editor.invoke('editor.insertImage', files.url);
                },
                commandsOptions: {
                    getfile: {
                        oncomplete: 'close',
                        folders: false
                    }
                }

            }).dialogelfinder('instance');
        }


    </script>
}


@model FoodShop_SWP.Models.EF.Posts
@{
    ViewData["Title"] = "Edit Post";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@section naviheader{
    <!-- Left navbar links -->
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="~/admin/home" class="nav-link">Home</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/post" class="nav-link">Post</a>
        </li>
    </ul>
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Edit Post</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/admin/home">Home</a></li>
                    <li class="breadcrumb-item"><a href="/admin/post">Post</a></li>
                    <li class="breadcrumb-item active">Edit</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Post Info</h3>
        </div>
        <div class="card-body">
            @if (Model != null)
            {
                <div class="bs-stepper-content">
                    <form asp-action="Edit" asp-controller="Post" method="post">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(x => x.Id)
                        <!-- your steps content here -->
                        <div id="logins-part" class="content active dstepper-block" role="tabpanel" aria-labelledby="logins-part-trigger">
                            <div class="form-group">
                                <label asp-for="Title">Title</label>
                                <input asp-for="Title" class="form-control" placeholder="Title" />
                                <span asp-validation-for="Title" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label asp-for="Image">Image</label>
                                <div class="input-group">
                                    <div class="custom-file">
                                        @Html.TextBoxFor(x => x.Image, new { @class = "form-control", @id = "imageURL" })
                                    </div>
                                    <div class="input-group-append">
                                        <input asp-for="Image" type="button" value="upload" onclick="openElFinder(this);" data-editor="your_editor_value" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label asp-for="Description">Description</label>
                                <textarea asp-for="Description" class="form-control"></textarea>
                            </div>
                            <div class="form-group">
                                <label asp-for="Detail">Detail</label>
                                <textarea asp-for="Detail" class="form-control"></textarea>
                            </div>
                            <div class="form-group">
                                <label asp-for="IsActive" style="display: inline-block; width: auto;">
                                    IsActive
                                    <input type="checkbox" asp-for="IsActive" class="form-control" style="width: 20px; height: 20px; margin-left: 20px;" />
                                </label>
                            </div>

                            <div class="form-group">
                                <label asp-for="SeoTitle">Seo Title</label>
                                <input asp-for="SeoTitle" class="form-control" />
                            </div>
                            <div class="form-group">
                                <a href="javascript:history.back()" class="btn btn-danger">Quay lại</a>
                                <button type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </div>
                    </form>
                    @if (ViewBag.ValidationErrors != null)
                    {
                        <div class="alert alert-danger">
                            <ul>
                                @foreach (var error in ViewBag.ValidationErrors)
                                {
                                    <li>@error</li>
                                }
                            </ul>
                        </div>
                    }

                </div>
            }

        </div>
        <!-- /.card-body -->
        <div class="card-footer">
        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>

<script>
    document.getElementById('newImage').addEventListener('change', function () {
        var fileInput = document.getElementById('newImage');
        var imageInput = document.getElementById('imageInput');

        if (fileInput.files.length > 0) {
            imageInput.value = fileInput.files[0].name;
        }
    });
</script>
@section  scripts{
    <script>
        $(document).ready(function () {
            $('#summernoteEditor').summernote({
                tabsize: 2,
                height: 120,
                toolbar: [
                    ['style', ['style']],
                    ['font', ['bold', 'underline', 'clear']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph']],
                    ['table', ['table']],
                    ['height', ['height']],
                    ['insert', ['link', 'picture', 'video', 'elfinder']],
                    ['view', ['fullscreen', 'codeview', 'help']]
                ]
            });
            $('#uploadButton').click(function () {
                elFinderDialog(editor);
            });
        });
        (function (factory) {
            if (typeof define === 'function' && define.amd) {
                define(['jquery'], factory);
            }
            else if (typeof module === 'object' && module.exports) {
                module.exports = factory(require('jquery'));
            } else {
                factory(window.jQuery);
            }
        }(function ($) {
            $.extend($.summernote.plugins, {
                // Tạo plugin tên elfinder
                'elfinder': function (context) {
                    var self = this;
                    // ui has renders to build ui elements.
                    var ui = $.summernote.ui;
                    // Tạo nút bấm
                    context.memo('button.elfinder', function () {
                        var button = ui.button({
                            contents: '<i class="note-icon-picture"/> Files',
                            tooltip: 'Quản lý file',
                            click: function () {
                                // Bấm vào nút bấm gọi hàm elfinderDialog
                                elfinderDialog(context);
                            }
                        });
                        // create jQuery object from button instance.
                        var $elfinder = button.render();
                        return $elfinder;
                    });
                    // This methods will be called when editor is destroyed by $('..').summernote('destroy');
                    // You should remove elements on `initialize`.
                    this.destroy = function () {
                        this.$panel.remove();
                        this.$panel = null;
                    };
                }

            });
        }));
        function openElFinder(button) {
            // Lấy giá trị editor từ thuộc tính data
            elfinderDialogPicture();
        }
        function elfinderDialogPicture() {
            var fm = $('<div class="ui-front-finder"/>').dialogelfinder({
                baseUrl: "@Url.Content("~/lib/elfinder/")",
                url: "@Url.Action("Connector", "FileManager", new { area = "Files" })",
                lang: 'vi',
                width: 840,
                height: 450,
                destroyOnClose: true,
                getFileCallback: function (files, fm) {
                    console.log(files);
                    // Chuyển đổi đường dẫn tuyệt đối thành đường dẫn tương đối
                    var relativePath = getRelativePath(files.url);

                    // Cập nhật giá trị của textbox với đường dẫn tương đối
                    $('#imageURL').val(relativePath);
                },
                commandsOptions: {
                    getfile: {
                        oncomplete: 'close',
                        folders: false
                    }
                }
            }).dialogelfinder('instance');
        }
        function getRelativePath(absolutePath) {
            // Lấy phần path sau domain
            var relativePath = absolutePath.replace(/^.*\/\/[^\/]+/, '');

            return relativePath;
        }

        function elfinderDialog(editor) {
            var fm = $('<div class="ui-front-finder"/>').dialogelfinder({
                baseUrl: "@Url.Content("~/lib/elfinder/")",
                url: "@Url.Action("Connector", "FileManager", new { area = "Files" })",
                lang: 'vi',
                width: 840,
                height: 450,
                destroyOnClose: true,
                getFileCallback: function (files, fm) {
                    console.log(files);
                    editor.invoke('editor.insertImage', files.url);
                },
                commandsOptions: {
                    getfile: {
                        oncomplete: 'close',
                        folders: false
                    }
                }

            }).dialogelfinder('instance');
        }


    </script>
}



